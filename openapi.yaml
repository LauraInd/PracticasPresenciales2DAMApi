openapi: 3.0.3
info:
  title: BookHub
  version: 1.0.11
servers:
  - url: https://localhost:8080
tags:
  - name: Book
    description: Libros
  - name: Author
    description: Autores de los libros
paths:
  /books:
    put:
      tags:
        - Book
      summary: Actualiza un libro
      description: Actualiza un libro
      operationId: updateBook
      requestBody:
        description: Actualiza un libro
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/xml:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
        '422':
          description: Validation exception
    get:
      tags:
        - Book
      summary: Buscar todos los libros
      description: Devuelve una lista de Libros
      operationId: getBooks
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
  /authors/{authorId}/books:
    post:
      tags:
        - Book
      summary: Añadir libro
      description: Añadir libro
      operationId: addBook
      parameters:
        - name: authorId
          in: path
          description: ID del autor
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Añadir libro
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/xml:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /books/{bookId}:
    get:
      tags:
        - Book
      summary: Buscar libro por ID
      description: Devuelve un libro
      operationId: getBookById
      parameters:
        - name: bookId
          in: path
          description: ID del libro
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
            application/xml:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
    delete:
      tags:
        - Book
      summary: Borrar libro por ID
      description: Borra un libro
      operationId: deleteBook
      parameters:
        - name: bookId
          in: path
          description: ID del libro
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
  /authors:
    put:
      tags:
        - Author
      summary: Actualiza un autor
      description: Actualiza un autor
      operationId: updateAuthor
      requestBody:
        description: Actualiza un autor
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author'
          application/xml:
            schema:
              $ref: '#/components/schemas/Author'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Author'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
            application/xml:
              schema:
                $ref: '#/components/schemas/Author'
        '400':
          description: Invalid ID supplied
        '404':
          description: Author not found
        '422':
          description: Validation exception
    get:
      tags:
        - Author
      summary: Buscar todos los autores
      description: Devuelve una lista de autores
      operationId: getAuthors
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
            application/xml:
              schema:
                $ref: '#/components/schemas/Author'
        '404':
          description: Author not found
    post:
      tags:
        - Author
      summary: Añadir un autor
      description: Añadir un autor
      operationId: addAuthor
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
            application/xml:
              schema:
                $ref: '#/components/schemas/Author'
        '400':
          description: Invalid input
        '422':
          description: Validation exception
  /authors/{authorId}:
    delete:
      tags:
        - Author
      summary: Borrar un autor
      operationId: deleteAuthor
      parameters:
        - name: authorId
          in: path
          description: ID del autor
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Book not found
    get:
      tags:
        - Author
      summary: Buscar autor por ID
      operationId: getAuthorById
      parameters:
        - name: authorId
          in: path
          description: ID del autor
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Author'
            application/xml:
              schema:
                $ref: '#/components/schemas/Author'
        '400':
          description: Invalid ID supplied
        '404':
          description: Author not found
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        title:
          type: string
          example: 100 años de soledad
        genre:
          type: string
          example: Novela
        publisher:
          type: string
          example: Planeta
        publicationDate:
          type: string
          format: date-time
        active:
          type: boolean
          example: true
      xml:
        name: book
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: Gabriel
        surname:
          type: string
          example: Garcia Marquez
        birthdate:
          type: string
          format: date-time
        active:
          type: boolean
          example: true
      xml:
        name: author
  requestBodies:
    Book:
      description: Libro
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Book'
        application/xml:
          schema:
            $ref: '#/components/schemas/Book'
